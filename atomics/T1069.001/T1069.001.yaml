attack_technique: T1069.001
display_name: 'Permission Groups Discovery: Local Groups'
atomic_tests:
- name: Permission Groups Discovery
  auto_generated_guid: 952931a4-af0b-4335-bbbe-73c8c5b327ae
  description: |
    Permission Groups Discovery
  supported_platforms:
  - macos
  - linux
  executor:
    command: |
      if [ -x "$(command -v dscacheutil)" ]; then dscacheutil -q group; else echo "dscacheutil is missing from the machine. skipping..."; fi; fi;
      if [ -x "$(command -v dscl)" ]; then dscl . -list /Groups; else echo "dscl is missing from the machine. skipping..."; fi;
      if [ -x "$(command -v groups)" ]; then groups; else echo "groups is missing from the machine. skipping..."; fi;
    name: sh
- name: Basic Permission Groups Discovery Windows
  auto_generated_guid: 1f454dd6-e134-44df-bebb-67de70fb6cd8
  description: |
    Basic Permission Groups Discovery for Windows. This test will display some errors if run on a computer not connected to a domain. Upon execution, domain
    information will be displayed.
  supported_platforms:
  - windows
  executor:
    command: |
      net localgroup
      net localgroup "Administrators"
    name: command_prompt
- name: Permission Groups Discovery PowerShell
  auto_generated_guid: 53d91444-6225-4e67-9df1-747dd74550f9
  description: |
    Permission Groups Discovery utilizing PowerShell. This test will display some errors if run on a computer not connected to a domain. Upon execution, domain
    information will be displayed.
  supported_platforms:
  - windows
  input_arguments:
    user:
      description: User to identify what groups a user is a member of
      type: string
      default: administrator
  executor:
    command: |
      get-localgroup
      Get-LocalGroupMember -Name "Administrators"
    name: powershell