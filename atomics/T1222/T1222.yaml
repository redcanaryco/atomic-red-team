---
attack_technique: T1222
display_name: File Permissions Modification

atomic_tests:
- name: Take ownership using takeown utility
  auto_generated_guid: 98d34bb4-6e75-42ad-9c41-1dae7dc6a001
  description: |
    Modifies the filesystem permissions of the specified file or folder to take ownership of the object. Upon execution, "SUCCESS" will
    be displayed for the folder and each file inside of it.

  supported_platforms:
    - windows

  input_arguments:
    file_folder_to_own:
      description: Path of the file or folder for takeown to take ownership.
      type: path
      default: "%temp%\\T1222_takeown_folder"

  dependency_executor_name: command_prompt
  dependencies:
    - description: |
        Test requrires a file to take ownership of to be located at (#{file_folder_to_own})
      prereq_command: |
        IF EXIST #{file_folder_to_own} ( EXIT 0 ) ELSE ( EXIT 1 )
      get_prereq_command: | 
        mkdir #{file_folder_to_own}
        echo T1222_takeown1 >> #{file_folder_to_own}\T1222_takeown1.txt
        echo T1222_takeown2 >> #{file_folder_to_own}\T1222_takeown2.txt

  executor:
    name: command_prompt
    command: |
      takeown.exe /f #{file_folder_to_own} /r

- name: cacls - Grant permission to specified user or group recursively
  auto_generated_guid: a8206bcc-f282-40a9-a389-05d9c0263485
  description: |
    Modifies the filesystem permissions of the specified folder and contents to allow the specified user or group Full Control. If "Access is denied"
    is displayed it may be because the file or folder doesn't exit. Run the prereq command to create it. Upon successfull execution, "Successfully processed 3 files"
    will be displayed.

  supported_platforms:
    - windows

  input_arguments:
    file_or_folder:
      description: Path of the file or folder to change permissions.
      type: path
      default: "%temp%\\T1222_cacls"
    user_or_group:
      description: User or group to allow full control
      type: string
      default: Everyone
  
  dependency_executor_name: command_prompt
  dependencies:
    - description: |
        Test requrires a file to modifyto be located at (#{file_or_folder})
      prereq_command: |
        IF EXIST #{file_or_folder} ( EXIT 0 ) ELSE ( EXIT 1 )
      get_prereq_command: | 
        mkdir #{file_or_folder}
        echo T1222_cacls1 >> #{file_or_folder}\T1222_cacls1.txt
        echo T1222_cacls2 >> #{file_or_folder}\T1222_cacls2.txt

  executor:
    name: command_prompt
    command: |
      Icacls.exe #{file_or_folder} /grant #{user_or_group}:F

- name: attrib - Remove read-only attribute
  auto_generated_guid: bec1e95c-83aa-492e-ab77-60c71bbd21b0
  description: |
    Removes the read-only attribute from a file or folder using the attrib.exe command. Upon execution, no output will be displayed.
    Open the file in File Explorer > Right Click - Prperties and observe that the Read Only checkbox is empty.

  supported_platforms:
    - windows

  input_arguments:
    file_or_folder:
      description: Path of the file or folder remove attribute.
      type: path
      default: "%temp%\\T1222_attrib"

  dependency_executor_name: command_prompt
  dependencies:
    - description: |
        Test requrires a file to modify to be located at (#{file_or_folder})
      prereq_command: |
        IF EXIST #{file_or_folder} ( EXIT 0 ) ELSE ( EXIT 1 )
      get_prereq_command: | 
        mkdir #{file_or_folder}
        echo T1222_attrib1 >> #{file_or_folder}\T1222_attrib1.txt
        echo T1222_attrib2 >> #{file_or_folder}\T1222_attrib2.txt
        attrib.exe +r #{file_or_folder}\T1222_attrib1.txt
        attrib.exe +r #{file_or_folder}\T1222_attrib2.txt

  executor:
    name: command_prompt
    command: |
      attrib.exe -r #{file_or_folder}\*.* /s

- name: chmod - Change file or folder mode (numeric mode)
  auto_generated_guid: 34ca1464-de9d-40c6-8c77-690adf36a135
  description: |
    Changes a file or folder's permissions using chmod and a specified numeric mode.

  supported_platforms:
    - macos
    - linux

  input_arguments:
    file_or_folder:
      description: Path of the file or folder
      type: path
      default: /tmp/AtomicRedTeam/atomics/T1222
    numeric_mode:
      description: Specified numeric mode value
      type: string
      default: 755

  executor:
    name: bash
    command: |
      chmod #{numeric_mode} #{file_or_folder}

- name: chmod - Change file or folder mode (symbolic mode)
  auto_generated_guid: fc9d6695-d022-4a80-91b1-381f5c35aff3
  description: |
    Changes a file or folder's permissions using chmod and a specified symbolic mode.

  supported_platforms:
    - macos
    - linux

  input_arguments:
    file_or_folder:
      description: Path of the file or folder
      type: path
      default: /tmp/AtomicRedTeam/atomics/T1222
    symbolic_mode:
      description: Specified symbolic mode value
      type: string
      default: a+w

  executor:
    name: bash
    command: |
      chmod #{symbolic_mode} #{file_or_folder}

- name: chmod - Change file or folder mode (numeric mode) recursively
  auto_generated_guid: ea79f937-4a4d-4348-ace6-9916aec453a4
  description: |
    Changes a file or folder's permissions recursively using chmod and a specified numeric mode.

  supported_platforms:
    - macos
    - linux

  input_arguments:
    file_or_folder:
      description: Path of the file or folder
      type: path
      default: /tmp/AtomicRedTeam/atomics/T1222
    numeric_mode:
      description: Specified numeric mode value
      type: string
      default: 755

  executor:
    name: bash
    command: |
      chmod #{numeric_mode} #{file_or_folder} -R

- name: chmod - Change file or folder mode (symbolic mode) recursively
  auto_generated_guid: 0451125c-b5f6-488f-993b-5a32b09f7d8f
  description: |
    Changes a file or folder's permissions recursively using chmod and a specified symbolic mode.

  supported_platforms:
    - macos
    - linux

  input_arguments:
    file_or_folder:
      description: Path of the file or folder
      type: path
      default: /tmp/AtomicRedTeam/atomics/T1222
    symbolic_mode:
      description: Specified symbolic mode value
      type: string
      default: a+w

  executor:
    name: bash
    command: |
      chmod #{symbolic_mode} #{file_or_folder} -R

- name: chown - Change file or folder ownership and group
  auto_generated_guid: d169e71b-85f9-44ec-8343-27093ff3dfc0
  description: |
    Changes a file or folder's ownership and group information using chown.

  supported_platforms:
    - macos
    - linux

  input_arguments:
    file_or_folder:
      description: Path of the file or folder
      type: path
      default: /tmp/AtomicRedTeam/atomics/T1222/T1222.yaml
    owner:
      description: Username of desired owner
      type: string
      default: root
    group:
      description: Group name of desired group
      type: string
      default: root

  executor:
    name: bash
    command: |
      chown #{owner}:#{group} #{file_or_folder}

- name: chown - Change file or folder ownership and group recursively
  auto_generated_guid: b78598be-ff39-448f-a463-adbf2a5b7848
  description: |
    Changes a file or folder's ownership and group information recursively using chown.
  supported_platforms:
    - macos
    - linux

  input_arguments:
    file_or_folder:
      description: Path of the file or folder
      type: path
      default: /tmp/AtomicRedTeam/atomics/T1222
    owner:
      description: Username of desired owner
      type: string
      default: root
    group:
      description: Group name of desired group
      type: string
      default: root

  executor:
    name: bash
    command: |
      chown #{owner}:#{group} #{file_or_folder} -R

- name: chown - Change file or folder mode ownership only
  auto_generated_guid: 967ba79d-f184-4e0e-8d09-6362b3162e99
  description: |
    Changes a file or folder's ownership only using chown.

  supported_platforms:
    - macos
    - linux

  input_arguments:
    file_or_folder:
      description: Path of the file or folder
      type: path
      default: /tmp/AtomicRedTeam/atomics/T1222/T1222.yaml
    owner:
      description: Username of desired owner
      type: string
      default: root

  executor:
    name: bash
    command: |
      chown #{owner} #{file_or_folder}

- name: chown - Change file or folder ownership recursively
  auto_generated_guid: 3b015515-b3d8-44e9-b8cd-6fa84faf30b2
  description: |
    Changes a file or folder's ownership only recursively using chown.
  supported_platforms:
    - macos
    - linux

  input_arguments:
    file_or_folder:
      description: Path of the file or folder
      type: path
      default: /tmp/AtomicRedTeam/atomics/T1222
    owner:
      description: Username of desired owner
      type: string
      default: root

  executor:
    name: bash
    command: |
      chown #{owner} #{file_or_folder} -R

- name: chattr - Remove immutable file attribute
  auto_generated_guid: e7469fe2-ad41-4382-8965-99b94dd3c13f
  description: |
    Remove's a file's `immutable` attribute using `chattr`.
    This technique was used by the threat actor Rocke during the compromise of Linux web servers.
  supported_platforms:
    - macos
    - linux

  input_arguments:
    file_to_modify:
      description: Path of the file
      type: path
      default: /var/spool/cron/root

  executor:
    name: sh
    command: |
      chattr -i #{file_to_modify}
