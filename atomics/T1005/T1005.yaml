attack_technique: T1005
display_name: 'Data from Local System'
atomic_tests:
- name: Extract Memory via VBA
  auto_generated_guid: 
  description: |
    This module attempts to emulate malware authors utilizing well known techniques to extract data from memory/binary files. To do this
    we first create a string in memory then pulls out the pointer to that string. Finally, it uses this pointer to copy the contents of that
    memory location to a file stored in the $env:TEMP directory.
  supported_platforms:
  - windows
  input_arguments:
    ms_product:
      description: Maldoc application Word
      type: String
      default: Word
  dependency_executor_name: powershell
  dependencies:
  - description: |
      Microsoft #{ms_product} must be installed
    prereq_command: |
      try {
        New-Object -COMObject "#{ms_product}.Application" | Out-Null
        $process = "#{ms_product}"; if ( $process -eq "Word") {$process = "winword"}
        Stop-Process -Name $process
        exit 0
      } catch { exit 1 }
    get_prereq_command: |
      Write-Host "You will need to install Microsoft #{ms_product} manually to meet this requirement"
  executor:
    command: |
      IEX (iwr "https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1") 
      Invoke-Maldoc -macroFile "PathToAtomicsFolder\T1005\src\T1005-macrocode.txt" -officeProduct "Word" -sub "Extract"
    cleanup_command: |
      Remove-Item "$env:TEMP\atomic_t1005_test_output.bin" -ErrorAction Ignore
    name: powershell
