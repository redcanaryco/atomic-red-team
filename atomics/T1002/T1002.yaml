---
attack_technique: T1002
display_name: Data Compressed

atomic_tests:
- name: Compress Data for Exfiltration With PowerShell
  auto_generated_guid: 41410c60-614d-4b9d-b66e-b0192dd9c597
  description: |
    An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration.
    When the test completes you should find the files from the $env:USERPROFILE directory compressed in a file called T1002-data-ps.zip in the $env:USERPROFILE directory 
  supported_platforms:
    - windows
  input_arguments:
    input_file:
      description: Path that should be compressed into our output file
      type: Path
      default: $env:USERPROFILE
    output_file:
      description: Path where resulting compressed data should be placed
      type: Path
      default: $env:USERPROFILE\T1002-data-ps.zip
  executor:
    name: powershell
    elevation_required: false
    command: |
      dir #{input_file} -Recurse | Compress-Archive -DestinationPath #{output_file}
    cleanup_command: |
      Remove-Item -path #{output_file} -ErrorAction Ignore

- name: Compress Data for Exfiltration With Rar
  auto_generated_guid: 02ea31cb-3b4c-4a2d-9bf1-e4e70ebcf5d0
  description: |
    An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration.
    When the test completes you should find the txt files from the %USERPROFILE% directory compressed in a file called T1002-data.rar in the %USERPROFILE% directory 

  supported_platforms:
    - windows
  input_arguments:
    input_path:
      description: Path that should be compressed into our output file
      type: Path
      default: '%USERPROFILE%'
    file_extension:
      description: Extension of files to compress
      type: String
      default: ".txt"
    output_file:
      description: Path where resulting compressed data should be placed
      type: Path
      default: '%USERPROFILE%\T1002-data.rar'
    rar_installer:
      description: Winrar installer
      type: Path
      default: '%TEMP%\winrar.exe'
    rar_exe:
      description: The RAR executable from Winrar
      type: Path
      default: '%programfiles%/WinRAR/Rar.exe'

  dependencies:
    - description: |
        Rar tool must be installed at specified location (#{rar_exe})
      prereq_command: |
        if not exist "#{rar_exe}" (exit /b 1)
      get_prereq_command: |
        echo Downloading Winrar installer
        bitsadmin /transfer myDownloadJob /download /priority normal "https://www.win-rar.com/fileadmin/winrar-versions/winrar/th/winrar-x64-580.exe" #{rar_installer}
        echo Follow the installer prompts to install Winrar
        #{rar_installer}

  executor:
    name: command_prompt
    elevation_required: false
    command: |
      "#{rar_exe}" a -r #{output_file} #{input_path}\*#{file_extension}
    cleanup_command: |
      del /f /q /s #{output_file} >nul 2>&1

- name: Data Compressed - nix - zip
  auto_generated_guid: c51cec55-28dd-4ad2-9461-1eacbc82c3a0
  description: |
    An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration. This test uses standard zip compression.
  supported_platforms:
    - linux
    - macos

  input_arguments:
    input_files:
      description: Path that should be compressed into our output file, may include wildcards
      type: Path
      default: $HOME/*.txt
    output_file:
      description: Path that should be output as a zip archive
      type: Path
      default: $HOME/data.zip

  dependencies:
    - description: |
        Files to zip must exist (#{input_files})
      prereq_command: |
        ls #{input_files}
      get_prereq_command: |
        echo Please set input_files argument to include files that exist

  executor:
    name: sh
    elevation_required: false
    prereq_command: |
      ls #{input_files} > /dev/null
    command: |
      zip #{output_file} #{input_files}
    cleanup_command: |
      rm -f #{output_file}

- name: Data Compressed - nix - gzip Single File
  auto_generated_guid: cde3c2af-3485-49eb-9c1f-0ed60e9cc0af
  description: |
    An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration. This test uses standard gzip compression.
  supported_platforms:
    - linux
    - macos
  input_arguments:
    input_file:
      description: Path that should be compressed
      type: Path
      default: $HOME/victim-gzip.txt
    input_content:
      description: contents of compressed files if file does not already exist. default contains test credit card and social security number
      type: String
      default: 'confidential! SSN: 078-05-1120 - CCN: 4000 1234 5678 9101'
  executor:
    name: sh
    elevation_required: false
    command: |
      test -e #{input_file} && gzip -k #{input_file} || (echo '#{input_content}' >> #{input_file}; gzip -k #{input_file})
    cleanup_command: |
      rm -f #{input_file}.gz

- name: Data Compressed - nix - tar Folder or File
  auto_generated_guid: 7af2b51e-ad1c-498c-aca8-d3290c19535a
  description: |
    An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration. This test uses standard gzip compression.
  supported_platforms:
    - linux
    - macos
  input_arguments:
    input_file_folder:
      description: Path that should be compressed
      type: Path
      default: '$HOME/$USERNAME'
    output_file:
      description: File that should be output
      type: Path
      default: '$HOME/data.tar.gz'
  
  dependencies:
    - description: |
        Folder to zip must exist (#{input_file_folder})
      prereq_command: |
        test -e #{input_file_folder}
      get_prereq_command: |
        echo Please set input_file_folder argument to a folder that exists

  executor:
    name: sh
    elevation_required: false
    command: |
      tar -cvzf #{output_file} #{input_file_folder}
    cleanup_command: |
      rm -f #{output_file}
